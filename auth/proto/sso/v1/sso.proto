syntax = "proto3";
package sso.v1;
option go_package = "sso/v1;ssov1";

import "google/api/annotations.proto";  

service Auth {
    rpc Register (RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/v1/user/register"
            body: "*"
        };
    }
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/user/login"
            body: "*"
        };
    }
    rpc CreateToken (TokenRequest) returns (TokenResponse) {
        option (google.api.http) = {
            post: "/v1/user/token"
            body: "*"
        };
    }
    rpc Logout (LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            post: "/v1/user/logout"
            body: "*"
        };
    }
    rpc UpdateAccessToken (AccessTokenRequest) returns (AccessTokenResponse) {
        option (google.api.http) = {
            put: "/v1/user/update.access.token"
            body: "*"
        };
    }
    rpc ChangePassword (PasswordRequest) returns (PasswordResponse) {
        option (google.api.http) = {
            post: "/v1/user/password.change"
            body: "*"
        };
    }
    rpc ForgotPassword (ForgotRequest) returns (ForgotResponse) {
        option (google.api.http) = {
            post: "/v1/user/password.forgot"
            body: "*"
        };
    }
    rpc ConfirmEmail (EmailRequest) returns (EmailResponse) {
        option (google.api.http) = {
            post: "/v1/user/email.confirm"
        };
    }
    rpc ValidateToken (ValidateRequest) returns (ValidateResponse);
    rpc RefreshToken (RefreshRequest) returns (RefreshResponse);
    rpc GetJWKS (Empty) returns (JWKSResponse);
}

message EmailRequest {
    string email = 1;
}

message EmailResponse {
    string success = 1;
}

message ForgotRequest {
    string email = 1; 
}

message ForgotResponse {
    bool success = 1;
}

message PasswordRequest {
    string oldPassword = 1;
    string newPassword = 2;
}

message PasswordResponse {
    bool success = 1;
}

message RegisterRequest {
    string email = 1;
    string password = 2;
    string login = 3;
    string apiKey = 4;
    repeated string services = 5;
}

message RegisterResponse {
    int64 user_id = 1;
}

message LoginRequest {
    string login = 1;
    string password = 2;
}

message LoginResponse {
    string accessToken = 1;
    string refreshToken = 2;
}

message TokenRequest {
    string token = 1;
    repeated string services = 2;
}

message TokenResponse {
    bool result = 1;
}

message LogoutRequest {
    string refreshToken = 1;
}

message LogoutResponse {
    bool success = 1;
    string message = 2;
}

message Empty {}

message JWKSResponse {
    repeated JWK keys = 1;
}

message JWK {
    string kty = 1;
    string kid = 2;
    string n = 3;
    string e = 4;
    string alg = 5;
}

message ValidateRequest {
    string accessToken = 1;
    string service = 2;
}

message ValidateResponse {
    int64 userID = 1;
}

message RefreshRequest {
    string refreshToken = 1;
}

message RefreshResponse {
    string accessToken = 1;
    string refreshToken = 2;
    int64 expiresIn = 3;
}

message AccessTokenRequest {
    string refreshToken = 1;
}

message AccessTokenResponse {
    string accessToken = 1;
}