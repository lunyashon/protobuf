syntax = "proto3";
package sso.v1;
option go_package = "sso/v1;ssov1";

import "google/api/annotations.proto"; 
import "google/protobuf/timestamp.proto"; 

service Auth {
    rpc Register (RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/v1/user/{token}/register"
            body: "*"
        };
    }
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/user/login"
            body: "*"
        };
    }
    rpc CreateToken (TokenRequest) returns (TokenResponse) {
        option (google.api.http) = {
            post: "/v1/token.create"
            body: "*"
        };
    }
    rpc Logout (LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            post: "/v1/user/logout.once"
            body: "*"
        };
    }
    rpc MassLogout (MassLogoutRequest) returns (MassLogoutResponse) {
        option (google.api.http) = {
            post: "/v1/user/logout.all"
            body: "*"
        }; 
    }
    rpc UpdateAccessToken (AccessTokenRequest) returns (AccessTokenResponse) {
        option (google.api.http) = {
            put: "/v1/user/update.access.token"
            body: "*"
        };
    }
    rpc ChangePassword (PasswordRequest) returns (PasswordResponse) {
        option (google.api.http) = {
            post: "/v1/user/password.change"
            body: "*"
        };
    }
    rpc ForgotPassword (ForgotRequest) returns (ForgotResponse) {
        option (google.api.http) = {
            post: "/v1/user/password.forgot"
            body: "*"
        };
    }
    rpc ConfirmEmail (EmailRequest) returns (EmailResponse) {
        option (google.api.http) = {
            post: "/v1/user/email.confirm"
            body: "*"
        };
    }
    rpc CheckConfirmToken (CheckConfirmRequest) returns (CheckConfirmResponse) {
        option (google.api.http) = {
            post: "/v1/user/email.confirm.check.token"
            body: "*"
        };
    }
    rpc CheckForgotToken (CheckForgotRequest) returns (CheckForgotResponse) {
        option (google.api.http) = {
            get: "/v1/user/{token}/password.forgot.check.token"
        };
    }
    rpc ResetPassword (ResetRequest) returns (ResetResponse) {
        option (google.api.http) = {
            put: "/v1/user/{token}/password.reset"
            body: "*"
        };
    }
    rpc GetProfile (ProfileRequest) returns (ProfileResponse) {
        option (google.api.http) = {
            get: "/v1/user/profile"
        };
    }
    rpc GetServices (ServicesRequest) returns (ServicesResponse) {
        option (google.api.http) = {
            get: "/v1/services"
        };
    }
    rpc RefreshToken (RefreshRequest) returns (RefreshResponse) {
        option (google.api.http) = {
            put: "/v1/user/token.refresh"        
        };
    }
    rpc ValidateToken (ValidateRequest) returns (ValidateResponse);
    rpc GetJWKS (Empty) returns (JWKSResponse);
}

message ServicesRequest {
    string name = 1;
    int32 id = 2;
}

message ServicesResponse {
    repeated StructureServices services = 1;
}

message StructureServices {
    int32 id = 1;
    string name = 2;
    google.protobuf.Timestamp created_at = 3;
}

message ProfileRequest {}

message ProfileResponse {
    int64 id = 1;
    string email = 2;
    string login = 3;
    google.protobuf.Timestamp createdAt = 4;
    bool confirmed = 5;
    string name = 6;
    string last_name = 7;
    string phone = 8;
    repeated Services services = 9; 
    repeated Session sessions = 10;
    string photo = 11;
}

message Services {
    int32 id = 1;
    string name = 2;
    google.protobuf.Timestamp expires_at = 3;
    bool active = 4;
}

message Session {
    string ip = 1;
    string device = 2;
    google.protobuf.Timestamp created = 3;
    bool is_active = 4;
}

message CheckConfirmRequest {
    string code = 1;
}

message CheckConfirmResponse {
    bool success = 1;
}

message CheckForgotRequest {
    string token = 1;
}

message CheckForgotResponse {
    bool success = 1;
}

message ResetRequest {
    string token = 1;
    string password = 2;
}

message ResetResponse {
    bool success = 1;
}

message EmailRequest {
    string email = 1;
}

message EmailResponse {
    bool success = 1;
}

message ForgotRequest {
    string email = 1; 
}

message ForgotResponse {
    bool success = 1;
}

message PasswordRequest {
    string oldPassword = 1;
    string newPassword = 2;
}

message PasswordResponse {
    bool success = 1;
}

message RegisterRequest {
    string token = 1;
    string email = 2;
    string password = 3;
    string login = 4;
}

message RegisterResponse {
    int64 user_id = 1;
}

message LoginRequest {
    string login = 1;
    string password = 2;
}

message LoginResponse {
    string accessToken = 1;
    string refreshToken = 2;
}

message TokenRequest {
    repeated int32 services = 1;
}

message TokenResponse {
    string token = 1;
}

message LogoutRequest {
    string refreshToken = 1;
}

message LogoutResponse {
    bool success = 1;
}

message MassLogoutRequest {
    string refreshToken = 1;
}

message MassLogoutResponse {
    bool success = 1;
}

message Empty {}

message JWKSResponse {
    repeated JWK keys = 1;
}

message JWK {
    string kty = 1;
    string kid = 2;
    string n = 3;
    string e = 4;
    string alg = 5;
}

message ValidateRequest {
    string accessToken = 1;
    string service = 2;
}

message ValidateResponse {
    int64 userID = 1;
}

message RefreshRequest {
    string refreshToken = 1;
}

message RefreshResponse {
    string accessToken = 1;
    string refreshToken = 2;
    int64 expiresIn = 3;
}

message AccessTokenRequest {
    string refreshToken = 1;
}

message AccessTokenResponse {
    string accessToken = 1;
}